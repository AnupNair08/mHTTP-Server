127.0.0.1 [Sun, 08 Nov 2020 12:55:53 IST] "POST / HTTP/1.1" 204 3311
{
    "isFile": true,
    "name": "anup",
    "surname": "nair",
    "filename": "8_QueensProblem.ipynb",
    "header_length": 1094,
    "filename\"; filename=\"8_QueensProblem.ipynb": "",
    "filedata": "b'{\\n \"cells\": [\\n  {\\n   \"cell_type\": \"code\",\\n   \"execution_count\": 3,\\n   \"metadata\": {},\\n   \"outputs\": [],\\n   \"source\": [\\n    \"from constraint import *\"\\n   ]\\n  },\\n  {\\n   \"cell_type\": \"code\",\\n   \"execution_count\": 4,\\n   \"metadata\": {},\\n   \"outputs\": [],\\n   \"source\": [\\n    \"problem = Problem()\"\\n   ]\\n  },\\n  {\\n   \"cell_type\": \"code\",\\n   \"execution_count\": 5,\\n   \"metadata\": {},\\n   \"outputs\": [],\\n   \"source\": [\\n    \"size = 8\"\\n   ]\\n  },\\n  {\\n   \"cell_type\": \"code\",\\n   \"execution_count\": 6,\\n   \"metadata\": {},\\n   \"outputs\": [],\\n   \"source\": [\\n    \"cols = range(1, size+1)\\\\n\",\\n    \"rows = range(1, size+1)\"\\n   ]\\n  },\\n  {\\n   \"cell_type\": \"code\",\\n   \"execution_count\": 7,\\n   \"metadata\": {},\\n   \"outputs\": [],\\n   \"source\": [\\n    \"problem.addVariables(cols, rows)\"\\n   ]\\n  },\\n  {\\n   \"cell_type\": \"code\",\\n   \"execution_count\": 10,\\n   \"metadata\": {},\\n   \"outputs\": [],\\n   \"source\": [\\n    \"for i in cols:\\\\n\",\\n    \"    for j in cols:\\\\n\",\\n    \"        if i < j:\\\\n\",\\n    \"            problem.addConstraint(lambda r1, r2, i=i, j=j:\\\\n\",\\n    \"                                 abs(r1-r2) != abs(i-j) and\\\\n\",\\n    \"                                 r1 != r2, (i, j))\"\\n   ]\\n  },\\n  {\\n   \"cell_type\": \"code\",\\n   \"execution_count\": 11,\\n   \"metadata\": {},\\n   \"outputs\": [],\\n   \"source\": [\\n    \"sol = problem.getSolution()\"\\n   ]\\n  },\\n  {\\n   \"cell_type\": \"code\",\\n   \"execution_count\": 13,\\n   \"metadata\": {},\\n   \"outputs\": [],\\n   \"source\": [\\n    \"mat = [[0 for _ in range(8)] for __ in range(8)]\"\\n   ]\\n  },\\n  {\\n   \"cell_type\": \"code\",\\n   \"execution_count\": 24,\\n   \"metadata\": {},\\n   \"outputs\": [],\\n   \"source\": [\\n    \"for i in range(8):\\\\n\",\\n    \"    j = sol[i+1]\\\\n\",\\n    \"    mat[i][j-1] = 1\"\\n   ]\\n  },\\n  {\\n   \"cell_type\": \"markdown\",\\n   \"metadata\": {},\\n   \"source\": [\\n    \"# 1 represents a queen\"\\n   ]\\n  },\\n  {\\n   \"cell_type\": \"code\",\\n   \"execution_count\": 22,\\n   \"metadata\": {},\\n   \"outputs\": [\\n    {\\n     \"data\": {\\n      \"text/plain\": [\\n       \"[[0, 0, 0, 0, 0, 0, 0, 1],\\\\n\",\\n       \" [0, 0, 0, 1, 0, 0, 0, 1],\\\\n\",\\n       \" [1, 0, 0, 1, 0, 0, 0, 0],\\\\n\",\\n       \" [1, 0, 1, 0, 0, 0, 0, 0],\\\\n\",\\n       \" [0, 0, 1, 0, 0, 1, 0, 0],\\\\n\",\\n       \" [0, 1, 0, 0, 0, 1, 0, 0],\\\\n\",\\n       \" [0, 1, 0, 0, 0, 0, 1, 0],\\\\n\",\\n       \" [0, 0, 0, 0, 1, 0, 1, 0]]\"\\n      ]\\n     },\\n     \"execution_count\": 22,\\n     \"metadata\": {},\\n     \"output_type\": \"execute_result\"\\n    }\\n   ],\\n   \"source\": [\\n    \"mat\"\\n   ]\\n  },\\n  {\\n   \"cell_type\": \"code\",\\n   \"execution_count\": null,\\n   \"metadata\": {},\\n   \"outputs\": [],\\n   \"source\": []\\n  }\\n ],\\n \"metadata\": {\\n  \"kernelspec\": {\\n   \"display_name\": \"Python 3\",\\n   \"language\": \"python\",\\n   \"name\": \"python3\"\\n  },\\n  \"language_info\": {\\n   \"codemirror_mode\": {\\n    \"name\": \"ipython\",\\n    \"version\": 3\\n   },\\n   \"file_extension\": \".py\",\\n   \"mimetype\": \"text/x-python\",\\n   \"name\": \"python\",\\n   \"nbconvert_exporter\": \"python\",\\n   \"pygments_lexer\": \"ipython3\",\\n   \"version\": \"3.7.4\"\\n  }\\n },\\n \"nbformat\": 4,\\n \"nbformat_minor\": 2\\n}\\n'"
}
